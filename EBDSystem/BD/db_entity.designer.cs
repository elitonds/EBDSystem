#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EBDSystem.BD
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EBD")]
	public partial class db_entityDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaluno_classe(aluno_classe instance);
    partial void Updatealuno_classe(aluno_classe instance);
    partial void Deletealuno_classe(aluno_classe instance);
    partial void Insertbairro(bairro instance);
    partial void Updatebairro(bairro instance);
    partial void Deletebairro(bairro instance);
    partial void Insertcidade(cidade instance);
    partial void Updatecidade(cidade instance);
    partial void Deletecidade(cidade instance);
    partial void Insertclasse(classe instance);
    partial void Updateclasse(classe instance);
    partial void Deleteclasse(classe instance);
    partial void Insertestado(estado instance);
    partial void Updateestado(estado instance);
    partial void Deleteestado(estado instance);
    partial void Insertpessoa(pessoa instance);
    partial void Updatepessoa(pessoa instance);
    partial void Deletepessoa(pessoa instance);
    partial void Insertprofessor_classe(professor_classe instance);
    partial void Updateprofessor_classe(professor_classe instance);
    partial void Deleteprofessor_classe(professor_classe instance);
    partial void Insertpai(pai instance);
    partial void Updatepai(pai instance);
    partial void Deletepai(pai instance);
    #endregion
		
		public db_entityDataContext() : 
				base(global::EBDSystem.Properties.Settings.Default.EBDConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public db_entityDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public db_entityDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public db_entityDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public db_entityDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<aluno_classe> aluno_classes
		{
			get
			{
				return this.GetTable<aluno_classe>();
			}
		}
		
		public System.Data.Linq.Table<bairro> bairros
		{
			get
			{
				return this.GetTable<bairro>();
			}
		}
		
		public System.Data.Linq.Table<cidade> cidades
		{
			get
			{
				return this.GetTable<cidade>();
			}
		}
		
		public System.Data.Linq.Table<classe> classes
		{
			get
			{
				return this.GetTable<classe>();
			}
		}
		
		public System.Data.Linq.Table<estado> estados
		{
			get
			{
				return this.GetTable<estado>();
			}
		}
		
		public System.Data.Linq.Table<pessoa> pessoas
		{
			get
			{
				return this.GetTable<pessoa>();
			}
		}
		
		public System.Data.Linq.Table<professor_classe> professor_classes
		{
			get
			{
				return this.GetTable<professor_classe>();
			}
		}
		
		public System.Data.Linq.Table<pai> pais
		{
			get
			{
				return this.GetTable<pai>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aluno_classe")]
	public partial class aluno_classe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_classe;
		
		private int _id_aluno;
		
		private EntityRef<classe> _classe;
		
		private EntityRef<pessoa> _pessoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_classeChanging(int value);
    partial void Onid_classeChanged();
    partial void Onid_alunoChanging(int value);
    partial void Onid_alunoChanged();
    #endregion
		
		public aluno_classe()
		{
			this._classe = default(EntityRef<classe>);
			this._pessoa = default(EntityRef<pessoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_classe", DbType="Int NOT NULL")]
		public int id_classe
		{
			get
			{
				return this._id_classe;
			}
			set
			{
				if ((this._id_classe != value))
				{
					if ((this._classe.HasLoadedOrAssignedValue || this._pessoa.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_classeChanging(value);
					this.SendPropertyChanging();
					this._id_classe = value;
					this.SendPropertyChanged("id_classe");
					this.Onid_classeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_aluno", DbType="Int NOT NULL")]
		public int id_aluno
		{
			get
			{
				return this._id_aluno;
			}
			set
			{
				if ((this._id_aluno != value))
				{
					this.Onid_alunoChanging(value);
					this.SendPropertyChanging();
					this._id_aluno = value;
					this.SendPropertyChanged("id_aluno");
					this.Onid_alunoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="classe_aluno_classe", Storage="_classe", ThisKey="id_classe", OtherKey="id", IsForeignKey=true)]
		public classe classe
		{
			get
			{
				return this._classe.Entity;
			}
			set
			{
				classe previousValue = this._classe.Entity;
				if (((previousValue != value) 
							|| (this._classe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._classe.Entity = null;
						previousValue.aluno_classes.Remove(this);
					}
					this._classe.Entity = value;
					if ((value != null))
					{
						value.aluno_classes.Add(this);
						this._id_classe = value.id;
					}
					else
					{
						this._id_classe = default(int);
					}
					this.SendPropertyChanged("classe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pessoa_aluno_classe", Storage="_pessoa", ThisKey="id_classe", OtherKey="id", IsForeignKey=true)]
		public pessoa pessoa
		{
			get
			{
				return this._pessoa.Entity;
			}
			set
			{
				pessoa previousValue = this._pessoa.Entity;
				if (((previousValue != value) 
							|| (this._pessoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pessoa.Entity = null;
						previousValue.aluno_classes.Remove(this);
					}
					this._pessoa.Entity = value;
					if ((value != null))
					{
						value.aluno_classes.Add(this);
						this._id_classe = value.id;
					}
					else
					{
						this._id_classe = default(int);
					}
					this.SendPropertyChanged("pessoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bairro")]
	public partial class bairro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_cidade;
		
		private string _nome;
		
		private EntitySet<pessoa> _pessoas;
		
		private EntityRef<cidade> _cidade;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_cidadeChanging(int value);
    partial void Onid_cidadeChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    #endregion
		
		public bairro()
		{
			this._pessoas = new EntitySet<pessoa>(new Action<pessoa>(this.attach_pessoas), new Action<pessoa>(this.detach_pessoas));
			this._cidade = default(EntityRef<cidade>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cidade", DbType="Int NOT NULL")]
		public int id_cidade
		{
			get
			{
				return this._id_cidade;
			}
			set
			{
				if ((this._id_cidade != value))
				{
					if (this._cidade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_cidadeChanging(value);
					this.SendPropertyChanging();
					this._id_cidade = value;
					this.SendPropertyChanged("id_cidade");
					this.Onid_cidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bairro_pessoa", Storage="_pessoas", ThisKey="id", OtherKey="id_bairro")]
		public EntitySet<pessoa> pessoas
		{
			get
			{
				return this._pessoas;
			}
			set
			{
				this._pessoas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cidade_bairro", Storage="_cidade", ThisKey="id_cidade", OtherKey="id", IsForeignKey=true)]
		public cidade cidade
		{
			get
			{
				return this._cidade.Entity;
			}
			set
			{
				cidade previousValue = this._cidade.Entity;
				if (((previousValue != value) 
							|| (this._cidade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cidade.Entity = null;
						previousValue.bairros.Remove(this);
					}
					this._cidade.Entity = value;
					if ((value != null))
					{
						value.bairros.Add(this);
						this._id_cidade = value.id;
					}
					else
					{
						this._id_cidade = default(int);
					}
					this.SendPropertyChanged("cidade");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pessoas(pessoa entity)
		{
			this.SendPropertyChanging();
			entity.bairro = this;
		}
		
		private void detach_pessoas(pessoa entity)
		{
			this.SendPropertyChanging();
			entity.bairro = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cidade")]
	public partial class cidade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_estado;
		
		private string _nome;
		
		private EntitySet<bairro> _bairros;
		
		private EntityRef<estado> _estado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_estadoChanging(int value);
    partial void Onid_estadoChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    #endregion
		
		public cidade()
		{
			this._bairros = new EntitySet<bairro>(new Action<bairro>(this.attach_bairros), new Action<bairro>(this.detach_bairros));
			this._estado = default(EntityRef<estado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estado", DbType="Int NOT NULL")]
		public int id_estado
		{
			get
			{
				return this._id_estado;
			}
			set
			{
				if ((this._id_estado != value))
				{
					if (this._estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_estadoChanging(value);
					this.SendPropertyChanging();
					this._id_estado = value;
					this.SendPropertyChanged("id_estado");
					this.Onid_estadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cidade_bairro", Storage="_bairros", ThisKey="id", OtherKey="id_cidade")]
		public EntitySet<bairro> bairros
		{
			get
			{
				return this._bairros;
			}
			set
			{
				this._bairros.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estado_cidade", Storage="_estado", ThisKey="id_estado", OtherKey="id", IsForeignKey=true)]
		public estado estado
		{
			get
			{
				return this._estado.Entity;
			}
			set
			{
				estado previousValue = this._estado.Entity;
				if (((previousValue != value) 
							|| (this._estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._estado.Entity = null;
						previousValue.cidades.Remove(this);
					}
					this._estado.Entity = value;
					if ((value != null))
					{
						value.cidades.Add(this);
						this._id_estado = value.id;
					}
					else
					{
						this._id_estado = default(int);
					}
					this.SendPropertyChanged("estado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bairros(bairro entity)
		{
			this.SendPropertyChanging();
			entity.cidade = this;
		}
		
		private void detach_bairros(bairro entity)
		{
			this.SendPropertyChanging();
			entity.cidade = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.classe")]
	public partial class classe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nome;
		
		private EntitySet<aluno_classe> _aluno_classes;
		
		private EntitySet<pessoa> _pessoas;
		
		private EntitySet<professor_classe> _professor_classes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    #endregion
		
		public classe()
		{
			this._aluno_classes = new EntitySet<aluno_classe>(new Action<aluno_classe>(this.attach_aluno_classes), new Action<aluno_classe>(this.detach_aluno_classes));
			this._pessoas = new EntitySet<pessoa>(new Action<pessoa>(this.attach_pessoas), new Action<pessoa>(this.detach_pessoas));
			this._professor_classes = new EntitySet<professor_classe>(new Action<professor_classe>(this.attach_professor_classes), new Action<professor_classe>(this.detach_professor_classes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="classe_aluno_classe", Storage="_aluno_classes", ThisKey="id", OtherKey="id_classe")]
		public EntitySet<aluno_classe> aluno_classes
		{
			get
			{
				return this._aluno_classes;
			}
			set
			{
				this._aluno_classes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="classe_pessoa", Storage="_pessoas", ThisKey="id", OtherKey="id_classe")]
		public EntitySet<pessoa> pessoas
		{
			get
			{
				return this._pessoas;
			}
			set
			{
				this._pessoas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="classe_professor_classe", Storage="_professor_classes", ThisKey="id", OtherKey="id_classe")]
		public EntitySet<professor_classe> professor_classes
		{
			get
			{
				return this._professor_classes;
			}
			set
			{
				this._professor_classes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aluno_classes(aluno_classe entity)
		{
			this.SendPropertyChanging();
			entity.classe = this;
		}
		
		private void detach_aluno_classes(aluno_classe entity)
		{
			this.SendPropertyChanging();
			entity.classe = null;
		}
		
		private void attach_pessoas(pessoa entity)
		{
			this.SendPropertyChanging();
			entity.classe = this;
		}
		
		private void detach_pessoas(pessoa entity)
		{
			this.SendPropertyChanging();
			entity.classe = null;
		}
		
		private void attach_professor_classes(professor_classe entity)
		{
			this.SendPropertyChanging();
			entity.classe = this;
		}
		
		private void detach_professor_classes(professor_classe entity)
		{
			this.SendPropertyChanging();
			entity.classe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.estado")]
	public partial class estado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_pais;
		
		private string _nome;
		
		private string _uf;
		
		private EntitySet<cidade> _cidades;
		
		private EntityRef<pai> _pai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_paisChanging(int value);
    partial void Onid_paisChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OnufChanging(string value);
    partial void OnufChanged();
    #endregion
		
		public estado()
		{
			this._cidades = new EntitySet<cidade>(new Action<cidade>(this.attach_cidades), new Action<cidade>(this.detach_cidades));
			this._pai = default(EntityRef<pai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pais", DbType="Int NOT NULL")]
		public int id_pais
		{
			get
			{
				return this._id_pais;
			}
			set
			{
				if ((this._id_pais != value))
				{
					if (this._pai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_paisChanging(value);
					this.SendPropertyChanging();
					this._id_pais = value;
					this.SendPropertyChanged("id_pais");
					this.Onid_paisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uf", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string uf
		{
			get
			{
				return this._uf;
			}
			set
			{
				if ((this._uf != value))
				{
					this.OnufChanging(value);
					this.SendPropertyChanging();
					this._uf = value;
					this.SendPropertyChanged("uf");
					this.OnufChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estado_cidade", Storage="_cidades", ThisKey="id", OtherKey="id_estado")]
		public EntitySet<cidade> cidades
		{
			get
			{
				return this._cidades;
			}
			set
			{
				this._cidades.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pai_estado", Storage="_pai", ThisKey="id_pais", OtherKey="id", IsForeignKey=true)]
		public pai pai
		{
			get
			{
				return this._pai.Entity;
			}
			set
			{
				pai previousValue = this._pai.Entity;
				if (((previousValue != value) 
							|| (this._pai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pai.Entity = null;
						previousValue.estados.Remove(this);
					}
					this._pai.Entity = value;
					if ((value != null))
					{
						value.estados.Add(this);
						this._id_pais = value.id;
					}
					else
					{
						this._id_pais = default(int);
					}
					this.SendPropertyChanged("pai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cidades(cidade entity)
		{
			this.SendPropertyChanging();
			entity.estado = this;
		}
		
		private void detach_cidades(cidade entity)
		{
			this.SendPropertyChanging();
			entity.estado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pessoa")]
	public partial class pessoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nome;
		
		private int _tipo;
		
		private System.Nullable<int> _id_bairro;
		
		private string _endereco;
		
		private string _numero;
		
		private string _cep;
		
		private System.Nullable<int> _id_pai;
		
		private System.Nullable<int> _id_mae;
		
		private System.Nullable<int> _id_classe;
		
		private System.Nullable<System.DateTime> _data_nascimento;
		
		private System.Nullable<char> _sexo;
		
		private System.Nullable<int> _estado_civil;
		
		private string _telefone_principal;
		
		private string _telefone_secundario;
		
		private string _comentario;
		
		private System.Nullable<int> _id_conjuge;
		
		private EntitySet<aluno_classe> _aluno_classes;
		
		private EntitySet<pessoa> _pessoas;
		
		private EntitySet<pessoa> _pessoas1;
		
		private EntitySet<pessoa> _pessoas2;
		
		private EntitySet<professor_classe> _professor_classes;
		
		private EntityRef<bairro> _bairro;
		
		private EntityRef<classe> _classe;
		
		private EntityRef<pessoa> _conjugue;
		
		private EntityRef<pessoa> _mae;
		
		private EntityRef<pessoa> _pai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OntipoChanging(int value);
    partial void OntipoChanged();
    partial void Onid_bairroChanging(System.Nullable<int> value);
    partial void Onid_bairroChanged();
    partial void OnenderecoChanging(string value);
    partial void OnenderecoChanged();
    partial void OnnumeroChanging(string value);
    partial void OnnumeroChanged();
    partial void OncepChanging(string value);
    partial void OncepChanged();
    partial void Onid_paiChanging(System.Nullable<int> value);
    partial void Onid_paiChanged();
    partial void Onid_maeChanging(System.Nullable<int> value);
    partial void Onid_maeChanged();
    partial void Onid_classeChanging(System.Nullable<int> value);
    partial void Onid_classeChanged();
    partial void Ondata_nascimentoChanging(System.Nullable<System.DateTime> value);
    partial void Ondata_nascimentoChanged();
    partial void OnsexoChanging(System.Nullable<char> value);
    partial void OnsexoChanged();
    partial void Onestado_civilChanging(System.Nullable<int> value);
    partial void Onestado_civilChanged();
    partial void Ontelefone_principalChanging(string value);
    partial void Ontelefone_principalChanged();
    partial void Ontelefone_secundarioChanging(string value);
    partial void Ontelefone_secundarioChanged();
    partial void OncomentarioChanging(string value);
    partial void OncomentarioChanged();
    partial void Onid_conjugeChanging(System.Nullable<int> value);
    partial void Onid_conjugeChanged();
    #endregion
		
		public pessoa()
		{
			this._aluno_classes = new EntitySet<aluno_classe>(new Action<aluno_classe>(this.attach_aluno_classes), new Action<aluno_classe>(this.detach_aluno_classes));
			this._pessoas = new EntitySet<pessoa>(new Action<pessoa>(this.attach_pessoas), new Action<pessoa>(this.detach_pessoas));
			this._pessoas1 = new EntitySet<pessoa>(new Action<pessoa>(this.attach_pessoas1), new Action<pessoa>(this.detach_pessoas1));
			this._pessoas2 = new EntitySet<pessoa>(new Action<pessoa>(this.attach_pessoas2), new Action<pessoa>(this.detach_pessoas2));
			this._professor_classes = new EntitySet<professor_classe>(new Action<professor_classe>(this.attach_professor_classes), new Action<professor_classe>(this.detach_professor_classes));
			this._bairro = default(EntityRef<bairro>);
			this._classe = default(EntityRef<classe>);
			this._conjugue = default(EntityRef<pessoa>);
			this._mae = default(EntityRef<pessoa>);
			this._pai = default(EntityRef<pessoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo", DbType="Int NOT NULL")]
		public int tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_bairro", DbType="Int")]
		public System.Nullable<int> id_bairro
		{
			get
			{
				return this._id_bairro;
			}
			set
			{
				if ((this._id_bairro != value))
				{
					if (this._bairro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_bairroChanging(value);
					this.SendPropertyChanging();
					this._id_bairro = value;
					this.SendPropertyChanged("id_bairro");
					this.Onid_bairroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endereco", DbType="VarChar(200)")]
		public string endereco
		{
			get
			{
				return this._endereco;
			}
			set
			{
				if ((this._endereco != value))
				{
					this.OnenderecoChanging(value);
					this.SendPropertyChanging();
					this._endereco = value;
					this.SendPropertyChanged("endereco");
					this.OnenderecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numero", DbType="VarChar(10)")]
		public string numero
		{
			get
			{
				return this._numero;
			}
			set
			{
				if ((this._numero != value))
				{
					this.OnnumeroChanging(value);
					this.SendPropertyChanging();
					this._numero = value;
					this.SendPropertyChanged("numero");
					this.OnnumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cep", DbType="VarChar(10)")]
		public string cep
		{
			get
			{
				return this._cep;
			}
			set
			{
				if ((this._cep != value))
				{
					this.OncepChanging(value);
					this.SendPropertyChanging();
					this._cep = value;
					this.SendPropertyChanged("cep");
					this.OncepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pai", DbType="Int")]
		public System.Nullable<int> id_pai
		{
			get
			{
				return this._id_pai;
			}
			set
			{
				if ((this._id_pai != value))
				{
					if (this._pai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_paiChanging(value);
					this.SendPropertyChanging();
					this._id_pai = value;
					this.SendPropertyChanged("id_pai");
					this.Onid_paiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_mae", DbType="Int")]
		public System.Nullable<int> id_mae
		{
			get
			{
				return this._id_mae;
			}
			set
			{
				if ((this._id_mae != value))
				{
					if (this._mae.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_maeChanging(value);
					this.SendPropertyChanging();
					this._id_mae = value;
					this.SendPropertyChanged("id_mae");
					this.Onid_maeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_classe", DbType="Int")]
		public System.Nullable<int> id_classe
		{
			get
			{
				return this._id_classe;
			}
			set
			{
				if ((this._id_classe != value))
				{
					if (this._classe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_classeChanging(value);
					this.SendPropertyChanging();
					this._id_classe = value;
					this.SendPropertyChanged("id_classe");
					this.Onid_classeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_nascimento", DbType="DateTime")]
		public System.Nullable<System.DateTime> data_nascimento
		{
			get
			{
				return this._data_nascimento;
			}
			set
			{
				if ((this._data_nascimento != value))
				{
					this.Ondata_nascimentoChanging(value);
					this.SendPropertyChanging();
					this._data_nascimento = value;
					this.SendPropertyChanged("data_nascimento");
					this.Ondata_nascimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sexo", DbType="Char(1)")]
		public System.Nullable<char> sexo
		{
			get
			{
				return this._sexo;
			}
			set
			{
				if ((this._sexo != value))
				{
					this.OnsexoChanging(value);
					this.SendPropertyChanging();
					this._sexo = value;
					this.SendPropertyChanged("sexo");
					this.OnsexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado_civil", DbType="Int")]
		public System.Nullable<int> estado_civil
		{
			get
			{
				return this._estado_civil;
			}
			set
			{
				if ((this._estado_civil != value))
				{
					this.Onestado_civilChanging(value);
					this.SendPropertyChanging();
					this._estado_civil = value;
					this.SendPropertyChanged("estado_civil");
					this.Onestado_civilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefone_principal", DbType="VarChar(200)")]
		public string telefone_principal
		{
			get
			{
				return this._telefone_principal;
			}
			set
			{
				if ((this._telefone_principal != value))
				{
					this.Ontelefone_principalChanging(value);
					this.SendPropertyChanging();
					this._telefone_principal = value;
					this.SendPropertyChanged("telefone_principal");
					this.Ontelefone_principalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefone_secundario", DbType="VarChar(200)")]
		public string telefone_secundario
		{
			get
			{
				return this._telefone_secundario;
			}
			set
			{
				if ((this._telefone_secundario != value))
				{
					this.Ontelefone_secundarioChanging(value);
					this.SendPropertyChanging();
					this._telefone_secundario = value;
					this.SendPropertyChanged("telefone_secundario");
					this.Ontelefone_secundarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comentario", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string comentario
		{
			get
			{
				return this._comentario;
			}
			set
			{
				if ((this._comentario != value))
				{
					this.OncomentarioChanging(value);
					this.SendPropertyChanging();
					this._comentario = value;
					this.SendPropertyChanged("comentario");
					this.OncomentarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_conjuge", DbType="Int")]
		public System.Nullable<int> id_conjuge
		{
			get
			{
				return this._id_conjuge;
			}
			set
			{
				if ((this._id_conjuge != value))
				{
					if (this._conjugue.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_conjugeChanging(value);
					this.SendPropertyChanging();
					this._id_conjuge = value;
					this.SendPropertyChanged("id_conjuge");
					this.Onid_conjugeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pessoa_aluno_classe", Storage="_aluno_classes", ThisKey="id", OtherKey="id_classe")]
		public EntitySet<aluno_classe> aluno_classes
		{
			get
			{
				return this._aluno_classes;
			}
			set
			{
				this._aluno_classes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pessoa_pessoa", Storage="_pessoas", ThisKey="id", OtherKey="id_conjuge")]
		public EntitySet<pessoa> pessoas
		{
			get
			{
				return this._pessoas;
			}
			set
			{
				this._pessoas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pessoa_pessoa1", Storage="_pessoas1", ThisKey="id", OtherKey="id_mae")]
		public EntitySet<pessoa> pessoas1
		{
			get
			{
				return this._pessoas1;
			}
			set
			{
				this._pessoas1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pessoa_pessoa2", Storage="_pessoas2", ThisKey="id", OtherKey="id_pai")]
		public EntitySet<pessoa> pessoas2
		{
			get
			{
				return this._pessoas2;
			}
			set
			{
				this._pessoas2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pessoa_professor_classe", Storage="_professor_classes", ThisKey="id", OtherKey="id_pessoa")]
		public EntitySet<professor_classe> professor_classes
		{
			get
			{
				return this._professor_classes;
			}
			set
			{
				this._professor_classes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bairro_pessoa", Storage="_bairro", ThisKey="id_bairro", OtherKey="id", IsForeignKey=true)]
		public bairro bairro
		{
			get
			{
				return this._bairro.Entity;
			}
			set
			{
				bairro previousValue = this._bairro.Entity;
				if (((previousValue != value) 
							|| (this._bairro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._bairro.Entity = null;
						previousValue.pessoas.Remove(this);
					}
					this._bairro.Entity = value;
					if ((value != null))
					{
						value.pessoas.Add(this);
						this._id_bairro = value.id;
					}
					else
					{
						this._id_bairro = default(Nullable<int>);
					}
					this.SendPropertyChanged("bairro");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="classe_pessoa", Storage="_classe", ThisKey="id_classe", OtherKey="id", IsForeignKey=true)]
		public classe classe
		{
			get
			{
				return this._classe.Entity;
			}
			set
			{
				classe previousValue = this._classe.Entity;
				if (((previousValue != value) 
							|| (this._classe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._classe.Entity = null;
						previousValue.pessoas.Remove(this);
					}
					this._classe.Entity = value;
					if ((value != null))
					{
						value.pessoas.Add(this);
						this._id_classe = value.id;
					}
					else
					{
						this._id_classe = default(Nullable<int>);
					}
					this.SendPropertyChanged("classe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pessoa_pessoa", Storage="_conjugue", ThisKey="id_conjuge", OtherKey="id", IsForeignKey=true)]
		public pessoa conjuge
		{
			get
			{
				return this._conjugue.Entity;
			}
			set
			{
				pessoa previousValue = this._conjugue.Entity;
				if (((previousValue != value) 
							|| (this._conjugue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._conjugue.Entity = null;
						previousValue.pessoas.Remove(this);
					}
					this._conjugue.Entity = value;
					if ((value != null))
					{
						value.pessoas.Add(this);
						this._id_conjuge = value.id;
					}
					else
					{
						this._id_conjuge = default(Nullable<int>);
					}
					this.SendPropertyChanged("conjuge");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pessoa_pessoa1", Storage="_mae", ThisKey="id_mae", OtherKey="id", IsForeignKey=true)]
		public pessoa mae
		{
			get
			{
				return this._mae.Entity;
			}
			set
			{
				pessoa previousValue = this._mae.Entity;
				if (((previousValue != value) 
							|| (this._mae.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._mae.Entity = null;
						previousValue.pessoas1.Remove(this);
					}
					this._mae.Entity = value;
					if ((value != null))
					{
						value.pessoas1.Add(this);
						this._id_mae = value.id;
					}
					else
					{
						this._id_mae = default(Nullable<int>);
					}
					this.SendPropertyChanged("mae");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pessoa_pessoa2", Storage="_pai", ThisKey="id_pai", OtherKey="id", IsForeignKey=true)]
		public pessoa pai
		{
			get
			{
				return this._pai.Entity;
			}
			set
			{
				pessoa previousValue = this._pai.Entity;
				if (((previousValue != value) 
							|| (this._pai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pai.Entity = null;
						previousValue.pessoas2.Remove(this);
					}
					this._pai.Entity = value;
					if ((value != null))
					{
						value.pessoas2.Add(this);
						this._id_pai = value.id;
					}
					else
					{
						this._id_pai = default(Nullable<int>);
					}
					this.SendPropertyChanged("pai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aluno_classes(aluno_classe entity)
		{
			this.SendPropertyChanging();
			entity.pessoa = this;
		}
		
		private void detach_aluno_classes(aluno_classe entity)
		{
			this.SendPropertyChanging();
			entity.pessoa = null;
		}
		
		private void attach_pessoas(pessoa entity)
		{
			this.SendPropertyChanging();
			entity.conjuge = this;
		}
		
		private void detach_pessoas(pessoa entity)
		{
			this.SendPropertyChanging();
			entity.conjuge = null;
		}
		
		private void attach_pessoas1(pessoa entity)
		{
			this.SendPropertyChanging();
			entity.mae = this;
		}
		
		private void detach_pessoas1(pessoa entity)
		{
			this.SendPropertyChanging();
			entity.mae = null;
		}
		
		private void attach_pessoas2(pessoa entity)
		{
			this.SendPropertyChanging();
			entity.pai = this;
		}
		
		private void detach_pessoas2(pessoa entity)
		{
			this.SendPropertyChanging();
			entity.pai = null;
		}
		
		private void attach_professor_classes(professor_classe entity)
		{
			this.SendPropertyChanging();
			entity.professor = this;
		}
		
		private void detach_professor_classes(professor_classe entity)
		{
			this.SendPropertyChanging();
			entity.professor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.professor_classe")]
	public partial class professor_classe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_classe;
		
		private int _id_pessoa;
		
		private EntityRef<classe> _classe;
		
		private EntityRef<pessoa> _professor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_classeChanging(int value);
    partial void Onid_classeChanged();
    partial void Onid_pessoaChanging(int value);
    partial void Onid_pessoaChanged();
    #endregion
		
		public professor_classe()
		{
			this._classe = default(EntityRef<classe>);
			this._professor = default(EntityRef<pessoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_classe", DbType="Int NOT NULL")]
		public int id_classe
		{
			get
			{
				return this._id_classe;
			}
			set
			{
				if ((this._id_classe != value))
				{
					if (this._classe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_classeChanging(value);
					this.SendPropertyChanging();
					this._id_classe = value;
					this.SendPropertyChanged("id_classe");
					this.Onid_classeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pessoa", DbType="Int NOT NULL")]
		public int id_pessoa
		{
			get
			{
				return this._id_pessoa;
			}
			set
			{
				if ((this._id_pessoa != value))
				{
					if (this._professor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_pessoaChanging(value);
					this.SendPropertyChanging();
					this._id_pessoa = value;
					this.SendPropertyChanged("id_pessoa");
					this.Onid_pessoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="classe_professor_classe", Storage="_classe", ThisKey="id_classe", OtherKey="id", IsForeignKey=true)]
		public classe classe
		{
			get
			{
				return this._classe.Entity;
			}
			set
			{
				classe previousValue = this._classe.Entity;
				if (((previousValue != value) 
							|| (this._classe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._classe.Entity = null;
						previousValue.professor_classes.Remove(this);
					}
					this._classe.Entity = value;
					if ((value != null))
					{
						value.professor_classes.Add(this);
						this._id_classe = value.id;
					}
					else
					{
						this._id_classe = default(int);
					}
					this.SendPropertyChanged("classe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pessoa_professor_classe", Storage="_professor", ThisKey="id_pessoa", OtherKey="id", IsForeignKey=true)]
		public pessoa professor
		{
			get
			{
				return this._professor.Entity;
			}
			set
			{
				pessoa previousValue = this._professor.Entity;
				if (((previousValue != value) 
							|| (this._professor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._professor.Entity = null;
						previousValue.professor_classes.Remove(this);
					}
					this._professor.Entity = value;
					if ((value != null))
					{
						value.professor_classes.Add(this);
						this._id_pessoa = value.id;
					}
					else
					{
						this._id_pessoa = default(int);
					}
					this.SendPropertyChanged("professor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pais")]
	public partial class pai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nome;
		
		private string _sigla;
		
		private EntitySet<estado> _estados;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OnsiglaChanging(string value);
    partial void OnsiglaChanged();
    #endregion
		
		public pai()
		{
			this._estados = new EntitySet<estado>(new Action<estado>(this.attach_estados), new Action<estado>(this.detach_estados));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(45)")]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sigla", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string sigla
		{
			get
			{
				return this._sigla;
			}
			set
			{
				if ((this._sigla != value))
				{
					this.OnsiglaChanging(value);
					this.SendPropertyChanging();
					this._sigla = value;
					this.SendPropertyChanged("sigla");
					this.OnsiglaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pai_estado", Storage="_estados", ThisKey="id", OtherKey="id_pais")]
		public EntitySet<estado> estados
		{
			get
			{
				return this._estados;
			}
			set
			{
				this._estados.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_estados(estado entity)
		{
			this.SendPropertyChanging();
			entity.pai = this;
		}
		
		private void detach_estados(estado entity)
		{
			this.SendPropertyChanging();
			entity.pai = null;
		}
	}
}
#pragma warning restore 1591
